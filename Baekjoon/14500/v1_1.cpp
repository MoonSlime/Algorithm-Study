/**
 * ㅗ 이러한 모양을 제외하고 DFS를 돌리고, 예외적인 모양은 따로 체크하는 방법도 있다.
 *
 * 회전 변환 행렬(2x2) 
 * 0 -1
 * 1  0
 */
#include <cstdio>
#include <vector>
#include <math.h>

using namespace std;

int N,M;//4<=N,M<=500
int arr[510][510];

/**
 * 회전 및 대칭 도형을 미리 정의.
 */
int tetro[20][8] = {{0,0,0,1,0,2,0,3},//
{0,0,1,0,2,0,3,0},
{0,0,0,1,1,0,1,1},//
{0,0,1,0,2,0,2,1},//
{1,0,1,1,1,2,0,2},
{0,0,0,1,1,1,2,1},
{0,0,0,1,0,2,1,0},
{0,0,1,0,1,1,2,1},//
{1,0,1,1,0,1,0,2},
{0,0,0,1,0,2,1,1},//
{0,0,1,0,1,1,2,0},
{1,0,0,1,1,1,1,2},
{1,0,1,1,0,1,2,1},
{0,0,0,1,1,0,2,0},//
{0,0,0,1,0,2,1,2},
{0,0,1,0,1,1,1,2},
{2,0,2,1,1,1,0,1},
{0,1,1,0,1,1,2,0},//
{0,0,0,1,1,1,1,2}};

int main(void) {
    scanf("%d %d", &N, &M);

    /**
     * 최대로 이어붙이는 도형의 길이가 4이므로 예외사항 처리를위하여 4값을 띄어준다.
     */
    int i,j;
    for (i=4; i<N+4; ++i) {
        for (j=4; j<M+4; ++j) {
            scanf("%d", &arr[i][j]);
        }
    }

    int sum,answer=0;
    int x,y;
    for (x=4; x<N+4; ++x) {
        for (y=4; y<M+4; ++y) {
            for (i=0; i<19; ++i) {
                sum = 0;
                for (j=0; j<4; ++j) {
                    sum += arr[x+tetro[i][j*2]][y+tetro[i][j*2+1]];
                }
                answer = max(answer, sum);
            }
        }
    }

    printf("%d\n", answer);
}
